{"version":3,"file":"static/js/820.5c77f040.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Task/Task.module.css?22e8","components/Task/Task.js","webpack://react-homework-template/./src/components/TaskList/TaskList.module.css?079b","components/TaskList/TaskList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/TaskEditor/TaskEditor.module.css?47aa","components/TaskEditor/TaskEditor.js","pages/Tasks.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__zvx3s\",\"text\":\"Task_text__IwwM2\",\"button\":\"Task_button__dYLbw\"};","import { useDispatch } from 'react-redux';\nimport { deleteTask } from 'redux/tasks/operations';\nimport css from './Task.module.css';\n\nexport const Task = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteTask(id));\n  return (\n    <div className={css.wrapper}>\n      <p className={css.text}>\n        {name}: {number}{' '}\n      </p>\n      <button type=\"button\" className={css.button} onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TaskList_list__Q1M-x\"};","import { Task } from '../Task/Task';\nimport css from './TaskList.module.css';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const TaskList = () => {\n  const { filterContacts, contacts } = useContacts();\n  const contactsLowerFilter = filterContacts?.toLowerCase();\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(contactsLowerFilter)\n  );\n\n  return (\n    <ul className={css.list}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <Task id={id} name={name} number={number} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport { useState } from 'react';\nimport { filterContact } from 'redux/FilterSlice';\nimport { useDispatch } from 'react-redux';\nimport css from './Filter.module.css'\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const [inputValue, setiIputValue] = useState('');\n  const handleChange = e => {\n    setiIputValue(e.target.value);\n    dispatch(filterContact(e.target.value));\n  };\n\n  return (\n<>\n<p>Find contact</p>\n    <label>\n      <input\n      className={css.input}\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n        placeholder=\"name\"\n      />\n    </label>\n</>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"TaskEditor_button__qGfcX\",\"input\":\"TaskEditor_input__WXNoz\"};","import React, { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { addTask } from 'redux/tasks/operations';\nimport { selectAllTasks } from 'redux/tasks/selectors';\nimport Filter from 'components/Filter/Filter';\nimport css from './TaskEditor.module.css'\n\nexport default function TaskEditor() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const contactsArray = useSelector(selectAllTasks);\n\n\n  const handleChange = event => {\n    let eventName = event.target.name;\n    let eventValue = event.target.value;\n\n    if (eventName === 'name') {\n      setName(eventValue);\n    }\n\n    if (eventName === 'number') {\n      setNumber(eventValue);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let name = event.target.name.value;\n    let number = event.target.number.value;\n\n    addContactToArray(name, number);\n  };\n\n  const addContactToArray = (name, number) => {\n    const oneContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    areTheseNumbersSame(oneContact);\n  };\n\n  const areTheseNumbersSame = oneContact => {\n    if (\n      contactsArray.find(\n        oneArrayContact =>\n          oneArrayContact.name.toLowerCase() === oneContact.name.toLowerCase()\n      )\n    ) {\n      alert(`контакт с именем ${oneContact.name}уже существует`);\n      return;\n    }\n\n    dispatch(addTask(oneContact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <p> Name </p>\n        <input\n        className={css.input}\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        ></input>\n\n        <p> Number </p>\n        <input\n        className={css.input}\n          name=\"number\"\n          type=\"tel\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        ></input>\n\n        <div>\n          <button type=\"submit\" className={css.button}>Добавить контакт</button>\n        </div>\n      </form>\n      <Filter />\n    </div>\n  );\n}\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { TaskList } from 'components/TaskList/TaskList';\n import  TaskEditor  from 'components/TaskEditor/TaskEditor';\n\nimport { fetchTasks } from 'redux/tasks/operations';\nimport { selectLoading } from 'redux/tasks/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your tasks</title>\n      </Helmet>\n      <TaskEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <TaskList />\n    </>\n  );\n}\n"],"names":["Task","id","name","number","dispatch","useDispatch","className","css","type","onClick","deleteTask","TaskList","useContacts","filterContacts","contacts","contactsLowerFilter","toLowerCase","visibleContacts","filter","contact","includes","map","useState","inputValue","setiIputValue","value","onChange","e","target","filterContact","placeholder","TaskEditor","setName","setNumber","contactsArray","useSelector","selectAllTasks","handleChange","event","eventName","eventValue","addContactToArray","oneContact","nanoid","areTheseNumbersSame","find","oneArrayContact","alert","addTask","reset","onSubmit","preventDefault","pattern","title","required","Tasks","isLoading","selectLoading","useEffect","fetchTasks","Helmet"],"sourceRoot":""}